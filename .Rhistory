res <- df %>% slice(i) %>% pull(is) %>% first
pl <- res %>%
plot(zero_line = FALSE) +
ggtitle(label = mt, subtitle = st) +
scale_x_continuous(breaks = f(10))
pg <- res %>%
plot_grid() +
ggtitle(label = mt, subtitle = st)
grid.arrange(pl, pg, ncol = 2)
if(results == TRUE){
print(st)
print(mt)
print(res)
}
}
}
}
models <- readRDS(".\\levels_y_transformations.RDS")
m <- models %>% filter(source == "patent_count ~ gdp + pop + avg_temp + fuel" & year_range == "2000:2020" & ar == 0 & p_val == "0.01") %>% gen_p(.)
class(m)
m <- models %>% filter(source == "patent_count ~ gdp + pop + avg_temp + fuel" & year_range == "2000:2020" & ar == 0 & p_val == "0.01") %>% gen_p(.)
models <- readRDS(".\\results\\logs_ytrans_samples.RDS")
plot(models$is[[27]]) # high income countries, ar = 1, logs, pval = 0.001, ihs y
plot(models$is[[31]]) # low income countries, ar = 1, logs, pval = 0.001, ihs y
models
models
models <- readRDS(".\\results\\logs_ytrans_samples.RDS")
y_transf_logs_sample_high <- plot(models$is[[27]]) # high income countries, ar = 1, logs, pval = 0.001, ihs y
ggsave("y_transf_logs_sample_high.png", plot = y_transf_logs_sample_high, device = "png", width = 10, height = 10)
#plot(models$is[[26]]) # high income countries, ar = 0, logs, pval = 0.001, ihs y
y_transf_logs_sample_low <- plot(models$is[[31]]) # low income countries, ar = 1, logs, pval = 0.001, ihs y
ggsave("y_transf_logs_sample_low.png", plot = y_transf_logs_sample_low, device = "png", width = 10, height = 10)
#(models$is[[30]]) # low income countries, ar = 0, logs, pval = 0.001, ihs y
library(tidyverse)
library(gets)
library(getspanel)
library(here)
library(doParallel)
library(readxl)
### for auto-tabs
library(grid)
library(gridExtra)
box_plot_by_gdp <- df %>%
group_by(state_name) %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count, x = prio_year)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name) +
scale_x_continuous(limits = c(2000, 2005, 2010, 2015, 2020)) +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_gdp
box_plot_by_high_gdp <- df %>%
group_by(state_name) %>%
filter(state_name %in% gdp_high) %>%
ggplot(aes(y = patent_count, x = prio_year)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name) +
scale_x_continuous(limits = c(2000, 2005, 2010, 2015, 2020)) +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_high_gdp
box_plot_by_high_gdp <- df %>%
group_by(state_name) %>%
filter(state_name %in% gdp_high) %>%
ggplot(aes(y = patent_count, x = prio_year)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name) +
scale_x_continuous(limits = c(2000, 2005, 2010, 2015, 2020)) +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by high income state")
box_plot_by_high_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count, x = prio_year)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name) +
scale_x_continuous(limits = c(2000, 2005, 2010, 2015, 2020)) +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_high_gdp <- df %>%
filter(state_name %in% gdp_high) %>%
ggplot(aes(y = patent_count, x = prio_year)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name) +
scale_x_continuous(limits = c(2000, 2005, 2010, 2015, 2020)) +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by high income state")
box_plot_by_high_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count, x = as.factor(prio_year))) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name) +
scale_x_continuous(limits = c(2000, 2005, 2010, 2015, 2020)) +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count, x = factor(prio_year))) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name) +
scale_x_continuous(limits = c(2000, 2005, 2010, 2015, 2020)) +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name) +
scale_x_continuous(limits = c(2000, 2005, 2010, 2015, 2020)) +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name) +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_high_gdp <- df %>%
filter(state_name %in% gdp_high) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name) +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by high income state")
box_plot_by_high_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales_y = "free") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
library(tidyverse)
library(gets)
library(getspanel)
library(here)
library(doParallel)
library(readxl)
### for auto-tabs
library(grid)
library(gridExtra)
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
library(tidyverse)
df <- read_csv(".\\model_spec\\df.csv")
box_plot_by_state <- df %>%
group_by(state_name) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by State")
box_plot_by_state
# ggsave(".\\figs_new\\box_plot_by_year.png", plot = box_plot_by_year, device = "png", width = 10, height = 10)
box_plot_by_high_gdp <- df %>%
filter(state_name %in% gdp_high) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by high income state")
box_plot_by_high_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
geom_jitter(color="black", size=0.4, alpha=0.9)
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
# Basic box plot
df$prio_year.factor <- factor(df$prio_year)
box_plot_by_year <- ggplot(df) +
geom_boxplot(mapping = aes(x = prio_year.factor,
y = patent_count),
outlier.colour="red",
outlier.size=1) +
geom_jitter(color="black", size=0.4, alpha=0.9) +
labs(x = "Priority filing year", y =  "Patent count") + theme_bw() + ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution over time")
box_plot_by_year
# Basic box plot
df$prio_year.factor <- factor(df$prio_year)
box_plot_by_year <- ggplot(df) +
geom_boxplot(mapping = aes(x = prio_year.factor,
y = patent_count),
outlier.colour="red",
outlier.size=1) +
geom_jitter(x = prio_year.factor, color="black", size=0.4, alpha=0.9) +
labs(x = "Priority filing year", y =  "Patent count") + theme_bw() + ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution over time")
# Basic box plot
df$prio_year.factor <- factor(df$prio_year)
box_plot_by_year <- ggplot(df) +
geom_boxplot(mapping = aes(x = prio_year.factor,
y = patent_count),
outlier.colour="red",
outlier.size=1) +
labs(x = "Priority filing year", y =  "Patent count") + theme_bw() + ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution over time")
box_plot_by_year
ggsave(".\\fig_new\\box_plot_by_year.png", plot = box_plot_by_year, device = "png", width = 10, height = 10)
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
stat_summary(fun = mean, geom = "point", col = "navy")
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
stat_summary(fun = mean, geom = "point", col = "navy")+
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_low_gdp <- df %>%
group_by(state_name) %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
stat_summary(fun = mean, geom = "point", col = "navy")+
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(x = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_low_gdp <- df %>%
filter(state_name %in% gdp_low) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by low income state")
box_plot_by_low_gdp
box_plot_by_high_gdp <- df %>%
filter(state_name %in% gdp_high) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "Priority filing year", y =  "Patent count") +
theme_bw() +
ggtitle("International US patent counts (Y02E class)", subtitle = "Distribution by high income state")
box_plot_by_high_gdp
df <- read_csv(".\\df.csv", show_col_types = FALSE)
df2 <- df %>% mutate(ihs_patent_count = asinh(patent_count),
log_patent_count = log(patent_count +1) )
samples <- list(gdp_high, gdp_low)
nonpat <- c("Alaska", "Mississippi", "North Dakota", "West Virginia", "Wyoming")
df3 <- df2 %>%
filter(!(state_name %in% nonpat))
View(df3)
View(df3)
controls <- c(" ~ gdp + pop + avg_temp + fuel",
" ~ lgdp + gdp_sq + lpop + lgdp_sq + avg_temp + lfuel")
dep_var <- c( "patent_count", "ihs_patent_count")
base_forms <- paste0(rep(dep_var, each = length(controls)), controls)
cl <- makeCluster(4)
registerDoParallel(cl)
models_nonpat <- foreach(f = base_forms, .combine = rbind, .packages = c('tidyverse', 'getspanel')) %:%
#foreach(smpl = c(1, 2), .combine = rbind) %:%
foreach(a = c(0,1), .combine = rbind) %:%
#foreach(b = c(10, 20, 30), .combine = rbind) %:%
foreach(p.value = c(0.01, 0.001), .combine = rbind, .errorhandling = "remove") %dopar% {
dat <- df3
is <- isatpanel(
data = dat,
formula = as.formula(f),
index = c("state_name", "prio_year"),
effect = "twoways",
iis = TRUE,
fesis = TRUE,
ar = a,
t.pval = p.value,
max.block.size = 20
)
models_nonpat = tibble(source = f,
#state_sample = smpl,
year_range = paste0(min(df3$prio_year),":",max(df3$prio_year)),
p_val = p.value,
is = list(is),
iis = TRUE,
b_size = 20,
ar = a)
}
controls <- c(" ~ gdp + pop + avg_temp + fuel",
" ~ lgdp + gdp_sq + lpop + lgdp_sq + avg_temp + lfuel")
dep_var <- c( "patent_count", "ihs_patent_count")
base_forms <- paste0(rep(dep_var, each = length(controls)), controls)
cl <- makeCluster(4)
registerDoParallel(cl)
models_nonpat <- foreach(f = base_forms, .combine = rbind, .packages = c('tidyverse', 'getspanel')) %:%
#foreach(smpl = c(1, 2), .combine = rbind) %:%
foreach(a = c(0,1), .combine = rbind) %:%
#foreach(b = c(10, 20, 30), .combine = rbind) %:%
foreach(p.value = c(0.01), .combine = rbind, .errorhandling = "remove") %dopar% {
dat <- df3
is <- isatpanel(
data = dat,
formula = as.formula(f),
index = c("state_name", "prio_year"),
effect = "twoways",
iis = TRUE,
fesis = TRUE,
ar = a,
t.pval = p.value,
max.block.size = 20
)
models_nonpat = tibble(source = f,
#state_sample = smpl,
year_range = paste0(min(df3$prio_year),":",max(df3$prio_year)),
p_val = p.value,
is = list(is),
iis = TRUE,
b_size = 20,
ar = a)
}
base_forms
controls <- c(" ~ gdp + pop + avg_temp + fuel",
" ~ lgdp + gdp_sq + lpop + lgdp_sq + avg_temp + lfuel")
dep_var <- c( "patent_count", "ihs_patent_count")
base_forms <- paste0(rep(dep_var, each = length(controls)), controls)
cl <- makeCluster(3)
registerDoParallel(cl)
models_nonpat <- foreach(f = base_forms, .combine = rbind, .packages = c('tidyverse', 'getspanel')) %:%
#foreach(smpl = c(1, 2), .combine = rbind) %:%
foreach(a = c(0,1), .combine = rbind) %:%
#foreach(b = c(10, 20, 30), .combine = rbind) %:%
foreach(p.value = c(0.01), .combine = rbind, .errorhandling = "remove") %dopar% {
dat <- df3
is <- isatpanel(
data = dat,
formula = as.formula(f),
index = c("state_name", "prio_year"),
effect = "twoways",
iis = TRUE,
fesis = TRUE,
ar = a,
t.pval = p.value,
max.block.size = 20
)
models_nonpat = tibble(source = f,
#state_sample = smpl,
year_range = paste0(min(df3$prio_year),":",max(df3$prio_year)),
p_val = p.value,
is = list(is),
iis = TRUE,
b_size = 20,
ar = a)
}
stopCluster(cl)
saveRDS(models_nonpat, ".\\results\\models_nonpat.RDS")
plot(models_nonpat$is[[1]])
plot(models_nonpat$is[[5]])
## Viz fit
```{r, fig.height=10, fig.width=10}
plot(models_nonpat$is[[5]])
nonpat <- c("Alaska", "Mississippi", "North Dakota", "West Virginia", "Wyoming")
df3 <- df2 %>%
filter(!(state_name %in% nonpat)) %>%
filter(prio_year >= 2019)
nonpat <- c("Alaska", "Mississippi", "North Dakota", "West Virginia", "Wyoming")
df3 <- df2 %>%
filter(!(state_name %in% nonpat)) %>%
filter(prio_year <= 2000 & prio_year >= 2019)
nonpat <- c("Alaska", "Mississippi", "North Dakota", "West Virginia", "Wyoming")
df3 <- df2 %>%
filter(!(state_name %in% nonpat)) %>%
filter(prio_year >= 2000 & prio_year <= 2019)
nonpat <- c("Alaska", "Mississippi", "North Dakota", "West Virginia", "Wyoming")
df3 <- df2 %>%
filter(!(state_name %in% nonpat)) %>%
filter(prio_year <= 2019)
controls <- c(" ~ lgdp + gdp_sq + lpop + lgdp_sq + avg_temp + lfuel") # " ~ gdp + pop + avg_temp + fuel",
dep_var <- c( "patent_count", "ihs_patent_count")
base_forms <- paste0(rep(dep_var, each = length(controls)), controls)
cl <- makeCluster(3)
registerDoParallel(cl)
models_nonpat <- foreach(f = base_forms, .combine = rbind, .packages = c('tidyverse', 'getspanel')) %:%
#foreach(smpl = c(1, 2), .combine = rbind) %:%
foreach(a = c(0,1), .combine = rbind) %:%
#foreach(b = c(10, 20, 30), .combine = rbind) %:%
foreach(p.value = c(0.01), .combine = rbind, .errorhandling = "remove") %dopar% {
dat <- df3
is <- isatpanel(
data = dat,
formula = as.formula(f),
index = c("state_name", "prio_year"),
effect = "twoways",
iis = TRUE,
fesis = TRUE,
ar = a,
t.pval = p.value,
max.block.size = 20
)
models_nonpat = tibble(source = f,
#state_sample = smpl,
year_range = paste0(min(df3$prio_year),":",max(df3$prio_year)),
p_val = p.value,
is = list(is),
iis = TRUE,
b_size = 20,
ar = a)
}
stopCluster(cl)
saveRDS(models_nonpat, ".\\results\\models_nonpat.RDS")
plot(models_nonpat$is[[5]])
plot(models_nonpat$is[[4]])
plot(models_nonpat$is[[2]])
plot(models_nonpat$is[[3]])
