stopCluster(cl)
saveRDS(models, ".\\results\\mods_main_updatedpackage_noIIS.RDS")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gets)
library(getspanel)
library(here)
library(doParallel)
library(readxl)
library(gdata)
mod <- readRDS(".\\results\\mods_main_updatedpackage.RDS")
mod <- readRDS(".\\results\\mods_main_updatedpackage.RDS")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(gets)
library(getspanel)
library(here)
library(doParallel)
library(readxl)
library(gdata)
mod <- readRDS(".\\results\\mods_main_updatedpackage.RDS")
mod <- readRDS(".\\model_spec\\results\\mods_main_updatedpackage.RDS")
plot(mod)
mod
plot(mod$is[[1]])
plot_grid(mod$is[[1]])
mod$is[[1]]
plot_counterfactual(mod$is[[1]])
plot_counterfactual(mod$is[[2]])
plot_counterfactual(mod_noIIS$is[[1]])
mod_noIIS <- readRDS(".\\results\\mods_main_updatedpackage_noIIS.RDS")
mod_noIIS <- readRDS(".\\model_spec\\results\\mods_main_updatedpackage_noIIS.RDS")
plot_counterfactual(mod_noIIS$is[[1]])
mod_noIIS$is[[1]]
plot_counterfactual(mod_noIIS$is[[1]])
pat <- read_csv("D:\\pct_direct_epo_all_vars.csv")
cpc_names <- read_csv(".\\cpc_class_names.csv")
cpc_names$CPC_Class <- cpc_names %>% pull(CPC_Class) %>%  gsub("\u00a0", " ", .) # utf8::utf8_print(c, utf8 = FALSE) to check
#c <- cpc_names[[4, 1]]
#c1 <- pat_plot[[1, 2]]
pat_plot <- pat %>%
filter(prio_year >= 2000 & prio_year <= 2019) %>%
select(appln_id, CPC_Class) %>%
distinct(.keep_all = TRUE)
pat_plot$CPC_Class <- pat_plot %>%  pull(CPC_Class) %>%   gsub("  ", " ", .)
pat_plot2 <- left_join(pat_plot, cpc_names, by = c("CPC_Class"))
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col(fill = "076fa2") +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
breaks <- c("South Carolina")
library(viridis)
pat_plot <- pat %>%
filter(prio_year >= 2000 & prio_year <= 2019) %>%
filter(Up_reg_label %in% breaks) %>%
select(appln_id, CPC_Class, Up_reg_label) %>%
distinct(.keep_all = TRUE)
pat_plot$CPC_Class <- pat_plot %>%  pull(CPC_Class) %>%   gsub("  ", " ", .)
pat_plot2 <- left_join(pat_plot, cpc_names, by = c("CPC_Class"))
pat_plot2 %>%
drop_na() %>%
group_by(Up_reg_label) %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(x = reorder(Name,n), y = n)) +
geom_col(fill = "viridis") +
coord_flip() +
ylab("") + xlab("") +
facet_wrap(~Up_reg_label, scales = "free_x") +
theme_bw() +
#theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("")
pat_plot2 %>%
drop_na() %>%
group_by(Up_reg_label) %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(x = reorder(Name,n), y = n)) +
geom_col() +
coord_flip() +
ylab("") + xlab("") +
facet_wrap(~Up_reg_label, scales = "free_x") +
theme_bw() +
scale_fill_viridis()
library(tidyverse)
library(ggthemes)
library(gridExtra)
library(packHV)
# load patent data
# complete dataset
df <- read_csv(".\\model_spec\\df.csv", show_col_types = FALSE)  # patent counts
library(usmap)
library(viridis)
df1<- df %>% select(state_name, patent_count) %>% group_by(state_name) %>% summarise(total_count = sum(patent_count)) %>%
rename("state"="state_name")
map1 <- plot_usmap(data = df1, values = "total_count") +
scale_fill_viridis(option = "plasma") +
theme(legend.position = "right",
legend.title = element_blank())
#ggsave(".\\figures\\map_patent_counts.png", plot = map1, device = "png", width = 8, height = 8)
map1
pat_plot2 %>%
drop_na() %>%
group_by(Up_reg_label) %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(x = reorder(Name,n), y = n)) +
geom_col() +
coord_flip() +
ylab("") + xlab("") +
facet_wrap(~Up_reg_label, scales = "free_x") +
theme_bw() +
scale_fill_viridis(option = "viridis")
pat_plot2 %>%
drop_na() %>%
group_by(Up_reg_label) %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(x = reorder(Name,n), y = n)) +
geom_col(fill = "076fa2") +
coord_flip() +
ylab("") + xlab("") +
facet_wrap(~Up_reg_label, scales = "free_x") +
theme_bw() +
#theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("")
pat <- read_csv("D:\\pct_direct_epo_all_vars.csv", show_col_types = FALSE)
cpc_names <- read_csv(".\\cpc_class_names.csv", show_col_types = FALSE)
cpc_names$CPC_Class <- cpc_names %>% pull(CPC_Class) %>%  gsub("\u00a0", " ", .) # utf8::utf8_print(c, utf8 = FALSE) to check
#c <- cpc_names[[4, 1]]
#c1 <- pat_plot[[1, 2]]
pat_plot <- pat %>%
filter(prio_year >= 2000 & prio_year <= 2019) %>%
select(appln_id, CPC_Class) %>%
distinct(.keep_all = TRUE)
pat_plot$CPC_Class <- pat_plot %>%  pull(CPC_Class) %>%   gsub("  ", " ", .)
pat_plot2 <- left_join(pat_plot, cpc_names, by = c("CPC_Class"))
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col(fill = "076fa2") +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col(fill = "076fa2") +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
scale_color_viridis() +
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col() +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
scale_color_viridis() +
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col() +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
fill_color_viridis() +
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col() +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
scale_fill_viridis_c()+
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col() +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
scale_colour_viridis(discrete = FALSE)+
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col() +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
scale_colour_viridis(discrete == FALSE)+
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col() +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
scale_color_viridis(discrete == FALSE)+
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col() +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
scale_color_viridis(discrete =FALSE)+
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
pat_plot2 %>%
drop_na() %>%
count(Name) %>%
arrange(desc(n)) %>%
head(10) %>%
ggplot(aes(reorder(Name, n), n)) +
geom_col() +
coord_flip() +
ylab("") + xlab("") +
#facet_wrap(~Up_reg_label) +
theme_bw() +
scale_color_viridis(discrete=TRUE)+
theme(axis.text.y = element_text(hjust = 1, size=6,color="Black")) +
ggtitle("Top ten Y02E subclass by frequency")
map1 <- plot_usmap(data = df1, values = "total_count") +
scale_fill_viridis(option = "plasma", limits = c(0, 4000), oob = scales::squish) +
theme(legend.position = "right",
legend.title = element_blank())
map1
map1 <- plot_usmap(data = df1, values = "total_count") +
scale_fill_viridis(option = "plasma", oob = scales::squish) +
theme(legend.position = "right",
legend.title = element_blank())
map1
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
library(tidyverse)
library(ggthemes)
library(gridExtra)
library(packHV)
# load patent data
# complete dataset
df <- read_csv(".\\model_spec\\df.csv", show_col_types = FALSE)  # patent counts
library(scales)
map1 <- plot_usmap(data = df1, values = "total_count") +
scale_fill_viridis(option = "plasma", oob = scales::squish) +
theme(legend.position = "right",
legend.title = element_blank())
library(usmap)
library(viridis)
library(scales)
df1<- df %>% select(state_name, patent_count) %>% group_by(state_name) %>% summarise(total_count = sum(patent_count)) %>%
rename("state"="state_name")
map1 <- plot_usmap(data = df1, values = "total_count") +
scale_fill_viridis(option = "plasma", oob = scales::squish) +
theme(legend.position = "right",
legend.title = element_blank())
map1
#ggsave(".\\figures\\map_patent_counts.png", plot = map1, device = "png", width = 8, height = 8)
map1 <- plot_usmap(data = df1, values = "total_count") +
scale_fill_viridis_c(option = "plasma",limits = c(0, 4000), oob = scales::squish) +
theme(legend.position = "right",
legend.title = element_blank())
map1
map1 <- plot_usmap(data = df1, values = "total_count") +
scale_fill_viridis_c(option = "plasma", limits = c(100, 4000), oob = scales::squish) +
theme(legend.position = "right",
legend.title = element_blank())
map1
map1 <- plot_usmap(data = df1, values = "total_count") +
scale_fill_viridis_c(option = "plasma", limits = c(10 4000), oob = scales::squish) +
map1
map1 <- plot_usmap(data = df1, values = "total_count") +
scale_fill_viridis_c(option = "plasma", limits = c(10, 4000), oob = scales::squish) +
theme(legend.position = "right",
legend.title = element_blank())
map1
map1 <- plot_usmap(data = df1, values = "total_count") +
scale_fill_viridis_c(option = "plasma", oob = scales::squish) +
theme(legend.position = "right",
legend.title = element_blank())
map1
# Basic box plot
df$prio_year.factor <- factor(df$prio_year)
box_plot_by_year <- ggplot(df) +
geom_boxplot(mapping = aes(x = prio_year.factor,
y = patent_count),
outlier.colour="red",
outlier.size=1) +
labs(x = "Priority filing year", y =  "Patent count") + theme_bw() + ggtitle("", subtitle = "")
box_plot_by_year
#ggsave(".\\fig_new\\box_plot_by_year.png", plot = box_plot_by_year, device = "png", width = 8, height = 8)
ggsave(".\\fig_new\\box_plot_by_year.png", plot = box_plot_by_year, device = "png", width = 8, height = 8)
ggsave(".\\figures\\box_plot_by_year.png", plot = box_plot_by_year, device = "png", width = 8, height = 8)
box_plot_by_state <- df %>%
group_by(state_name) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "", y =  "Patent count") +
theme_bw() +
ggtitle("", subtitle = "")
box_plot_by_state
#ggsave(".\\figures\\box_plot_by_state.png", plot = box_plot_by_state, device = "png", width = 10, height = 10)
ggsave(".\\figures\\box_plot_by_state.png", plot = box_plot_by_state, device = "png", width = 10, height = 10)
box_plot_by_state <- df %>%
group_by(state_name) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free") +
labs(x = "", y =  "Patent count") +
theme_bw() +
ggtitle("", subtitle = "")
box_plot_by_state
box_plot_by_state <- df %>%
group_by(state_name) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "", y =  "Patent count") +
theme_bw() +
ggtitle("", subtitle = "")
box_plot_by_state
box_plot_by_state <- df %>%
group_by(state_name) %>%
ggplot(aes(y = patent_count)) +
geom_boxplot(outlier.colour="red",
outlier.size=1) +
facet_wrap(~state_name, scales = "free_y") +
labs(x = "", y =  "Patent count") +
theme_bw() +
ggtitle("", subtitle = "") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
box_plot_by_state
ggsave(".\\figures\\box_plot_by_state.png", plot = box_plot_by_state, device = "png", width = 10, height = 10)
knitr::opts_chunk$set(echo = TRUE, max.height = '300px', fig.width = 16, fig.height = 8) #fig.show="hold",,
library(data.table)
library(tidyverse)
library(openxlsx)
library(gets)
library(getspanel)
library(here)
library(doParallel)
library(gridExtra)
library(conflicted)
library(viridis)
library(kableExtra)
#library(gplots)
conflict_prefer("filter", "dplyr")
conflict_prefer("first", "dplyr")
conflict_prefer("lag", "dplyr")
# mod prep
new_results <- readRDS(here("model_spec/results/models_nonpat_2.RDS")) %>%
separate(source, into = c("dep","formula"), sep = "[~]", remove = FALSE) %>%
mutate(dep = str_to_title(gsub("_"," ",trimws(dep))),
formula = trimws(formula),
mod_name = case_when(grepl("lgdp_sq", source) & grepl("lpop", source) ~ "Log controls"))
new_results
stats_pat <- df %>% # create df with stats needed: mean, median, max by state
select(state_name, patent_count) %>%
group_by(state_name) %>%
summarise(median = median(patent_count, na.rm=TRUE),
mean = mean(patent_count, na.rm=TRUE),
q75 = quantile(patent_count, 0.75),
max = max(patent_count, na.rm=TRUE))
box <- stats_pat %>%
ggplot(aes(x = mean))+
geom_boxplot(colour = "black") +
xlab("")+
ylab("") +
theme_bw()
hist <- stats_pat %>%
ggplot(aes(x = mean)) +
geom_histogram(bins = 51, fill = "navy", colour = "black") +
xlab("") +
ylab("") +
theme_bw()
box_hist_dist <- grid.arrange(box,hist, ncol=1, nrow=2, respect = FALSE, widths = c(5), heights = c(6, 6), top = "Y02E class patent counts. State mean distribution ", bottom = "State mean patent counts")
stats_pat <- df %>% # create df with stats needed: mean, median, max by state
select(state_name, patent_count) %>%
group_by(state_name) %>%
summarise(median = median(patent_count, na.rm=TRUE),
mean = mean(patent_count, na.rm=TRUE),
q75 = quantile(patent_count, 0.75),
max = max(patent_count, na.rm=TRUE))
box <- stats_pat %>%
ggplot(aes(x = mean))+
geom_boxplot(colour = "black") +
xlab("")+
ylab("") +
theme_bw()
hist <- stats_pat %>%
ggplot(aes(x = mean)) +
geom_histogram(bins = 51, fill = "navy", colour = "black") +
xlab("") +
ylab("") +
theme_bw()
box_hist_dist <- grid.arrange(box,hist, ncol=1, nrow=2, respect = FALSE, widths = c(5), heights = c(6, 6), top = "", bottom = "State mean patent counts")
ggsave(".\\figures\\box_hist_means.png", plot = box_hist_dist, device = "png", width = 8, height = 8)
hist2 <- stats_pat %>%
filter(!state_name == "California") %>%
ggplot(aes(x = mean)) +
geom_histogram(binwidth = 1, fill = "navy", colour = "black") +
xlab("State mean patent counts") +
ylab("") +
ggtitle("Y02E class patent counts. State mean distribution - without California") +
theme_bw()
hist2
hist2 <- stats_pat %>%
#filter(!state_name == "California") %>%
ggplot(aes(x = mean)) +
geom_histogram(binwidth = 1, fill = "navy", colour = "black") +
xlab("State mean patent counts") +
ylab("") +
ggtitle("Y02E class patent counts. State mean distribution - without California") +
theme_bw()
hist2
stats_pat <- df %>% # create df with stats needed: mean, median, max by state
select(state_name, patent_count) %>%
group_by(state_name) %>%
summarise(median = median(patent_count, na.rm=TRUE),
mean = mean(patent_count, na.rm=TRUE),
q75 = quantile(patent_count, 0.75),
max = max(patent_count, na.rm=TRUE))
box <- stats_pat %>%
ggplot(aes(x = mean))+
geom_boxplot(colour = "black") +
xlab("")+
ylab("") +
theme_bw()
hist <- stats_pat %>%
ggplot(aes(x = mean)) +
geom_histogram(bins = 51, binwidth = 1, fill = "navy", colour = "black") +
xlab("") +
ylab("") +
theme_bw()
box_hist_dist <- grid.arrange(box,hist, ncol=1, nrow=2, respect = FALSE, widths = c(5), heights = c(6, 6), top = "", bottom = "State mean patent counts")
ggsave(".\\figures\\box_hist_means.png", plot = box_hist_dist, device = "png", width = 8, height = 8)
View(stats_pat)
